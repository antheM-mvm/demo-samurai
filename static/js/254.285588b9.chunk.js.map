{"version":3,"file":"static/js/254.285588b9.chunk.js","mappings":"qJACA,QAA0B,yBAA1B,EAA4D,wBAA5D,EAAmG,8BAAnG,EAA0I,wBAA1I,EAA6K,0B,uBCG7K,MAUA,EAVoBA,IAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAW,IAAMA,EAASC,UACxCH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAKK,SAAEN,EAAMS,QACtB,ECDV,EANiBT,IAEbG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,SAAEN,EAAMU,U,qDCDrC,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAfwBd,IAEpBe,EAAAA,EAAAA,MAAA,QAAMC,SAAUhB,EAAMiB,aAAaX,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBY,YAAY,qBAAqBd,KAAK,sBAE/CN,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,gBCiBhB,EA1BiBN,IAEf,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAAK1B,EAAAA,EAAAA,KAAC2B,EAAU,CAAYrB,KAAMoB,EAAEpB,KAAMP,GAAI2B,EAAE3B,IAA1B2B,EAAE3B,MAC5D6B,EAAmBP,EAAMQ,SAASJ,KAAIK,IAAK9B,EAAAA,EAAAA,KAAC+B,EAAO,CAAYxB,QAASuB,EAAEvB,SAAjBuB,EAAE/B,MAM/D,OAAKF,EAAMmC,QAGTpB,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC5BoB,KAEHvB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACzBH,EAAAA,EAAAA,KAAA,OAAAG,SAAMyB,OAER5B,EAAAA,EAAAA,KAACiC,EAAc,QAVOjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CAAC7B,GAAI,UAWhC,E,wBCRV,SAAe8B,E,QAAAA,KACbC,EAAAA,EAAAA,KAfqBf,IACd,CACLC,YAAaD,EAAMC,gBAIGe,IACjB,CACLC,YAAcC,IACZF,GAASG,EAAAA,EAAAA,GAAmBD,GAAgB,MAOhDE,EAAAA,EAFF,CAGEC,E","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__8J2dt\",\"dialog\":\"Dialogs_dialog__cf-EZ\",\"dialogsItems\":\"Dialogs_dialogsItems__b7cSU\",\"active\":\"Dialogs_active__E0VtZ\",\"messages\":\"Dialogs_messages__el7he\",\"message\":\"Dialogs_message__v9mfq\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.dialog}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength50]}\r\n               placeholder=\"Enter your message\" name=\"newMessageBody\" />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n  let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth) return <Navigate to={'/login'} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","_jsx","className","s","children","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","AddMessageForm","Navigate","compose","connect","dispatch","sendMessage","newMessageBody","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}